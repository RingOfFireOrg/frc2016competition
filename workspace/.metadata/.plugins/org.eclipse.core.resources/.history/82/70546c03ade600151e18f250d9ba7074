package org.usfirst.frc.team3459.robot;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;

public class PiClient {
	
	final int PORT = 5801;
	
	final byte[] LOCAL_IP = new byte[] { 10, 99, 99, 20 }; 
    final byte[] REMOTE_IP = new byte[] { 10, 99, 99, 22 };
    final long INTERVAL = 1000;
    int port = 5801;
    long lastQuery = 0;
	
	PiClient(){
	
	}
	
	public boolean retrieveTargetingState(){
		 Socket s = null;
		 long now = System.currentTimeMillis();
		 if ((now - lastQuery) < INTERVAL) {
			 return (false);
		 } else {
			 lastQuery = now;
		 }
		 try {
			
			InetAddress localAddress = InetAddress.getByAddress(LOCAL_IP);
			InetAddress remoteAddress = InetAddress.getByAddress(REMOTE_IP);

			int localPort = port;
			port += 1;
			if (port > 5810) {
				port = 5801;
			}
			s = new Socket(remoteAddress, 5801, localAddress, localPort);

			InputStream input = s.getInputStream();
			OutputStream output = s.getOutputStream();
			output.write("isOnTarget".getBytes());
			output.flush();
			InputStreamReader reader = new InputStreamReader(input);
			BufferedReader br = new BufferedReader(reader);
			
			int foo = br.read();
			
			if(foo == 'H' ){
				return true;
			} else {
				return false;
			}

		} catch (UnknownHostException e) {
			return false;
		} catch (IOException e) {
			return false;
		}
		finally {
			if (s != null) {
				try {
			        s.close();
				} catch (Exception e) {
					return false;
				}
			}
		}
	}
}
