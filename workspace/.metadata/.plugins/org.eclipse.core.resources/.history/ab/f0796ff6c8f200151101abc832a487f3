package org.usfirst.frc.team3459.ptlibj;

import edu.wpi.first.wpilibj.RobotDrive;

/**
 * @author Kyle Brown
 */
public class DriveTrain extends RobotDrive {
	public static final double AUTOSPEED = 1;
	public enum State {SPEED,AUTODRIVE};
	
	private SmartEncoder lEncoder;
	private SmartEncoder rEncoder;
	
	private State state = State.SPEED;
	private int lDisplacement = 0;
	private int rDisplacement = 0;
	private double leftSpeed, rightSpeed;
	
	private int count = 0;
	
	public DriveTrain(int p0, int p1, SmartEncoder e1, SmartEncoder e2) {
		super(p0, p1);
		this.lEncoder = e2;
		this.rEncoder = e1;
	}
	
	public void tankDrive(double leftSpeed, double rightSpeed) {
		state = State.SPEED;
		this.leftSpeed = leftSpeed;
		this.rightSpeed = rightSpeed;
		
		super.tankDrive(leftSpeed, rightSpeed);
	}

	public void displace(int lDisplacement, int rDisplacement) {
		state = State.AUTODRIVE;
		lEncoder.reset();
		rEncoder.reset();
		
		this.lDisplacement = lDisplacement;
		this.rDisplacement = rDisplacement;
	}
	
	public void updateAutoDrive() {
		if(state == State.SPEED) {
			return;
		}
		
		if(lEncoder.get() < lDisplacement) {
			leftSpeed = 1;
		} else {
			leftSpeed = 0;
		}
		
		if(rEncoder.get() < rDisplacement) {
			rightSpeed = 1;
		} else {
			rightSpeed = 0;
		}
		
		super.tankDrive(leftSpeed, rightSpeed);
	}
	
	public void printEncoders() {
		count++;
		if(count%10 != 0)
			return;
		
		System.out.println(lEncoder.getState("Encoder_L"));
		System.out.println(rEncoder.getState("Encoder_R"));
	}
}